21-09-2021

To do:
1- use 4 views of the robot: facing
2- use both blue and orange robots
3- use 2 arrows to match the robot color or make the arrow more "neutral"
4- coordinate the small arrows/PCs in the code, with the robots color

1=> done
2=> done but now I have to assume no more than 2 robots in any level! :(
3=> made it more neutral color
4=> done

- add a flag in the level definitions to decide if the world is toroidal or if the robot blocks when it reaches the border

- Ema-complexity: number of sub-steps to complete the task,
	AKA number of first level steps in Jackson top-down analysis
	- How the method works: 
	http://www.jacksonworkbench.co.uk/stevefergspages/papers/ourusoff--introduction_to_jackson_design_method.pdf

	[GOOD] "TOP DOWN ANALYSIS REVIEW"
	https://cgi.csc.liv.ac.uk/~frans/OldLectures/2CS21_Ada/week6/topDown.html

	(A bit complex)- An example of Jackson JSD -> "structural complexity"
	http://mcs.open.ac.uk/mj665/compeu90.pdf

bug- every run creates 1 or 2 more pcArrows, and I never remove them :(
	- fixed. I now remove old paArrow before starting a new compilation phase

OPTION: when "Collision with edge of the world", perhaps shake the browser or the view 	
		to signal/juice to the user!
	- done: shake when collison using CSS animation

bug- show pc_arrows at the bottom of the last instruction, when the robot is done running
	- solved, but not perfect solution :(

